画像の直線幅の測定

[基本機能]
入力ファイル：JPG(1600 X 1200)
線の定義：暗い背景に明るい色の直線　もしくは明るい背景に暗い色の直線　垂直もしくは水平に存在
線幅の定義：線の輪郭の上下差、もしくは左右差を言う
測定結果の描画：頂いたファイルを参考に、画像上に測定結果の描画を行う
測定結果の出力：CSV形式にて、[元画像ファイル名,出力画像ファイル名,縦横判定,白黒判定,線幅 X 10]を出力する

[使用方法]

1.　環境構築

requirements.txt　に従って、パッケージのインストールを行います。

pip install -r requirements.text

2. フォルダ構造の確認


before : 処理したい画像を入れるフォルダ
after : 処理された画像及びcsvが入るフォルダ
ipaexg00401 : IPAのフォントが入っているフォルダ

※注意　画像ファイルに制限があります。

- jpgファイル(拡張子が.jpgのもの)
- 解像度 : 1600 X 1200
- 名前が英数字記号のみ(日本語やギリシャ文字は使用できません)

3.　プログラムの実行

python において実行します。

python main.py

実行ファイルの main.py は同じフォルダ内のbeforeフォルダとafterフォルダを探します。
gipファイルを開いた状態で、動作できる状態になっています。
誤って移動・削除してしまった場合でも、同名フォルダが存在すれば動作します。

線の縦横、及び背景画像の明るさを判定して、処理を行います。
処理された画像および処理結果のcsvがafterフォルダに入ります。

[うまく動かなかったら]

入力画像によっては、線がうまく認識されないかもしれません。
背景画像の色によって、main関数内の以下の値を調整してみてください。

if __name__ == "__main__":
    #背景白画像の際の、画像を二値化する際の境界値
    WHITE_BOUNDARY = 127
    #背景黒画像の際の、画像を二値化する際の境界値
    BLACK_BOUNDARY = 40
    main(WHITE_BOUNDARY,BLACK_BOUNDARY)

WHITE_BOUNDARY = 127

背景白画像の際の、画像を二値化する際の境界値です。
0~255の間で設定可能です。
線が白っぽくて認識されない場合、この値を下げると認識されやすくなります。


BLACK_BOUNDARY = 40

背景黒画像の際の、画像を二値化する際の境界値です。
0~255の間で設定可能です。
線が黒っぽくて認識されない場合、この値を上げると認識されやすくなります。
